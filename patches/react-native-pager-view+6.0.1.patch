diff --git a/node_modules/react-native-pager-view/lib/commonjs/PagerView.js b/node_modules/react-native-pager-view/lib/commonjs/PagerView.js
index 40afb41..9fea96e 100644
--- a/node_modules/react-native-pager-view/lib/commonjs/PagerView.js
+++ b/node_modules/react-native-pager-view/lib/commonjs/PagerView.js
@@ -131,10 +131,13 @@ class PagerView extends _react.default.Component {
   }
 
   render() {
-    return /*#__PURE__*/_react.default.createElement(_PagerViewNative.PagerViewViewManager, _extends({}, this.props, {
-      ref: this.PagerView
-      /** TODO: Fix ref type */
-      ,
+    const {
+      children,
+      forwardedRef,
+      ...rest
+    } = this.props;
+    return /*#__PURE__*/_react.default.createElement(_PagerViewNative.PagerViewViewManager, _extends({}, rest, {
+      // ref={this.PagerView as any /** TODO: Fix ref type */}
       style: this.props.style,
       layoutDirection: this.deducedLayoutDirection,
       onPageScroll: this._onPageScroll,
diff --git a/node_modules/react-native-pager-view/lib/module/PagerView.js b/node_modules/react-native-pager-view/lib/module/PagerView.js
index dc1ddc5..b9adde0 100644
--- a/node_modules/react-native-pager-view/lib/module/PagerView.js
+++ b/node_modules/react-native-pager-view/lib/module/PagerView.js
@@ -116,17 +116,20 @@ export class PagerView extends React.Component {
   }
 
   render() {
-    return /*#__PURE__*/React.createElement(PagerViewViewManager, _extends({}, this.props, {
-      ref: this.PagerView
-      /** TODO: Fix ref type */
-      ,
+    const {
+      children,
+      forwardedRef,
+      ...rest
+    } = this.props;
+    return /*#__PURE__*/_react.default.createElement(_PagerViewNative.PagerViewViewManager, _extends({}, rest, {
+      // ref={this.PagerView as any /** TODO: Fix ref type */}
       style: this.props.style,
       layoutDirection: this.deducedLayoutDirection,
       onPageScroll: this._onPageScroll,
       onPageScrollStateChanged: this._onPageScrollStateChanged,
       onPageSelected: this._onPageSelected,
       onMoveShouldSetResponderCapture: this._onMoveShouldSetResponderCapture,
-      children: childrenWithOverriddenStyle(this.props.children)
+      children: (0, _utils.childrenWithOverriddenStyle)(this.props.children)
     }));
   }
 
diff --git a/node_modules/react-native-pager-view/lib/typescript/PagerView.d.ts b/node_modules/react-native-pager-view/lib/typescript/PagerView.d.ts
index f70d3bc..5610963 100644
--- a/node_modules/react-native-pager-view/lib/typescript/PagerView.d.ts
+++ b/node_modules/react-native-pager-view/lib/typescript/PagerView.d.ts
@@ -41,7 +41,9 @@ import type { PagerViewProps } from './types';
  * }
  * ```
  */
-export declare class PagerView extends React.Component<PagerViewProps> {
+export declare class PagerView extends React.Component<PagerViewProps, {
+    forwardedRef?: any;
+}> {
     private isScrolling;
     private PagerView;
     getInnerViewNode: () => ReactElement;
diff --git a/node_modules/react-native-pager-view/src/PagerView.tsx b/node_modules/react-native-pager-view/src/PagerView.tsx
index f7585d5..9cf4909 100644
--- a/node_modules/react-native-pager-view/src/PagerView.tsx
+++ b/node_modules/react-native-pager-view/src/PagerView.tsx
@@ -141,17 +141,19 @@ export class PagerView extends React.Component<PagerViewProps> {
   }
 
   render() {
+    const {children, forwardedRef, ...rest} = this.props;
+
     return (
       <PagerViewViewManager
-        {...this.props}
-        ref={this.PagerView as any /** TODO: Fix ref type */}
+        {...rest}
+        // ref={this.PagerView as any /** TODO: Fix ref type */}
         style={this.props.style}
         layoutDirection={this.deducedLayoutDirection}
         onPageScroll={this._onPageScroll}
         onPageScrollStateChanged={this._onPageScrollStateChanged}
         onPageSelected={this._onPageSelected}
         onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}
-        children={childrenWithOverriddenStyle(this.props.children)}
+        children={childrenWithOverriddenStyle(children)}
       />
     );
   }
